buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.2'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'com.google.protobuf' version "0.9.2"
}

group 'com.fengsheng'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'io.netty', name: 'netty-all', version: '4.1.89.Final'
    implementation 'com.google.protobuf:protobuf-java:3.21.12'
    implementation 'log4j:log4j:1.2.17'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.21.12'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task run(dependsOn: classes, type: JavaExec) {
    main("com.fengsheng.Game")
    classpath(sourceSets.main.runtimeClasspath)
}

task stat(dependsOn: classes, type: JavaExec) {
    main("com.fengsheng.Statistics")
    classpath(sourceSets.main.runtimeClasspath)
}

tasks.withType(Jar) {
    // Otherwise you'll get a "No main manifest attribute" error
    manifest {
        attributes["Main-Class"] = "com.fengsheng.Game"
    }

    // To avoid the duplicate handling strategy error
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    // To add all of the dependencies otherwise a "NoClassDefFoundError" error
    from(sourceSets.main.output)

    dependsOn(configurations.runtimeClasspath)
    from({
        configurations.runtimeClasspath.filter { it.name.endsWith("jar") }.forEach { zipTree(it) }
    })
}
