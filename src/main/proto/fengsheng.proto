syntax = "proto3";
option java_package = "com.fengsheng.protos";
import "common.proto";

message reconnect_toc {
  bool is_end = 1; // false-开始，true-结束
}

message pause_record_tos {
  bool pause = 1; // true-暂停，false-继续
}

message pause_record_toc {
  bool pause = 1; // true-成功进入暂停，false-成功继续
}

message get_record_list_tos {
  uint32 version = 1; // 客户端版本号
}

message get_record_list_toc {
  repeated string records = 1;
}

// 心跳：客户端发给服务器
message heart_tos {
}

// 心跳：服务器回复客户端
message heart_toc {
  uint32 online_count = 1; // 当前在线人数
  uint64 timestamp = 2; // 服务器时间戳
}

// 请求房间加一个位置
message add_one_position_tos {
}

// 广播房间加一个位置
message add_one_position_toc {
}

// 请求房间减少一个位置
message remove_one_position_tos {
}

// 广播房间减少一个位置
message remove_one_position_toc {
  uint32 position = 1; // 减少的是哪个位置
}

// 请求播放录像
message display_record_tos {
  uint32 version = 1; // 客户端版本号
  string record_id = 2; // 录像ID
}

// 通知客户端录像播放完了
message display_record_end_toc {
}

// 通知客户端录像存好了
message save_record_success_toc {
  string record_id = 1;
}

// 申请加入房间
message join_room_tos {
  uint32 version = 1; // 客户端版本号
  string name = 2; // 玩家的名字
  string password = 4; // 密码，建议客户端先加密一下再发过来
}

// 返回房间所有人的信息
message get_room_info_toc {
  repeated string names = 1; // 所有人的名字
  uint32          my_position = 2;
  uint32          online_count = 3; // 当前在线人数
  repeated uint32 win_counts = 4; // 所有人的胜场数
  repeated uint32 game_counts = 5; // 所有人的总场数
  repeated string ranks = 6; // 所有人的段位段数
  repeated int32  scores = 7; // 所有人的段位分数
  string          notice = 8; // 房间公告
}

// 请求加一个机器人
message add_robot_tos {
}

// 请求减少一个机器人
message remove_robot_tos {
}

// 通知谁加入了房间
message join_room_toc {
  string name = 1;
  uint32 position = 2;
  uint32 win_count = 3;
  uint32 game_count = 4;
  string rank = 5;
  int32  score = 6;
}

// 通知谁离开的房间
message leave_room_toc {
  uint32 position = 1;
}

// 通知客户端游戏开始了，可以加载场景了
message game_start_toc {
}

// 通知服务器场景加载完了
message game_init_finish_tos {
}

// 通知客户端被顶号了
message notify_kicked_toc {
}

// 等待客户端选角色
message wait_for_select_role_toc {
  uint32        player_count = 1; // 玩家总人数（包括你）
  color         identity = 2; // 你的身份
  secret_task   secret_task = 3; // （你的身份是神秘人时）你的机密任务
  repeated role roles = 4; // 发给你的角色
  uint32        waiting_second = 5; // 读多少秒
  repeated secret_task possible_secret_task = 6; // 可能的神秘人任务
}

// 托管
message auto_play_tos {
  bool enable = 1;
}

// 托管返回
message auto_play_toc {
  bool enable = 1;
}

// 选角色
message select_role_tos {
  role role = 1;
}

// 通知客户端选角色成功了
message select_role_toc {
  role role = 1;
}

// 通知客户端：初始化游戏
message init_toc {
  uint32          player_count = 1; // 玩家总人数（包括你）
  color           identity = 2; // 你的身份
  secret_task     secret_task = 3; // （你的身份是神秘人时）你的机密任务
  repeated role   roles = 4; // 从自己开始，依次每个人的角色
  repeated string names = 5; // 从自己开始，依次每个人的名字
  repeated secret_task possible_secret_task = 6; // 可能的神秘人任务
}

// 通知客户端玩家变化
message notify_player_update_toc {
  uint32 player_id = 1;
  bool is_auto = 2;
  bool is_offline = 3;
}

// 通知谁获胜了
message notify_winner_toc {
  repeated uint32      declare_player_ids = 1;
  repeated uint32      winner_ids = 2;
  repeated color       identity = 3; // 所有人的身份，自己的下标为0，右手第一个人的下标为1
  repeated secret_task secret_tasks = 4; // 神秘人任务，下标同上一一对应，不是神秘人的那个位置会空出来
  repeated int32       add_score = 5; // 增加的分数，负数就是减分，下标同上一一对应
  repeated int32       new_score = 6; // 增加后的分数，下标同上一一对应
  repeated string      new_rank = 7; // 增加后的段位，下标同上一一对应
}
